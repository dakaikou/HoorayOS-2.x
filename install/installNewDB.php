<?php
/**
 * TestLink Open Source Project - http://testlink.sourceforge.net/ 
 * This script is distributed under the GNU General Public License 2 or later. 
 *
 * create or update TestLink database 
 * 
 * @filesource  installNewDB.php
 * @package     TestLink
 * @author      Francisco Mancardi
 * @copyright   2008,2012 TestLink community
 * @copyright   inspired by
 *              Etomite Content Management System, 2003, 2004 Alexander Andrew Butter 
 *
 * @internal revisions
 * @since 1.9.6
 * 
 **/

//require_once("installUtils.php");
require_once("sqlParser.class.php");
if( !isset($_SESSION) )
{ 
  session_start();
}

// catch DB input data
foreach($_POST as $key => $val) {
  $_SESSION[$key] = $val;
}

//assure that no timeout happens for large data
set_time_limit(0);
$tl_and_version = $_SESSION['app_name'] .' ' .$_SESSION['app_version'];

//define('LEN_PWD_TL_1_0_4',15);
//define('ADD_DIR',1);

//$migration_process = '';
$sql_create_schema = array();
//$sql_default_data = array();
//$sql_update_schema = array();
//$sql_update_data   = array();

// get db info from session
$db_server = $_SESSION['databasehost'];
$db_admin_name = $_SESSION['databaseloginname'];
$db_admin_passwd = $_SESSION['databaseloginpassword'];
$db_name = $_SESSION['databasename'];
$db_type = $_SESSION['databasetype'];
$db_usr_name = $_SESSION['tl_loginname'];
$db_usr_passwd = $_SESSION['tl_loginpassword'];
$db_table_prefix = $_SESSION['tableprefix'];

//$sql_file = "sql/{$db_type}/{$db_name}.sql";
$sql_create_schema[0] = "sql/{$db_type}/{$db_name}.sql";
//$sql_create_schema[1] = "sql/{$db_type}/{$db_name}_create_tables.sql";
//$sql_create_schema[2] = "sql/{$db_type}/{$db_name}_create_default_data.sql";
$a_sql_schema[] = $sql_create_schema;
//$a_sql_data[]   = $sql_default_data;
$inst_type_verbose=" Installation ";

$install = $_SESSION['isNew'];
$upgrade = !$install;
if ($upgrade)
{
  $inst_type_verbose=" Upgrade ";
//    $a_sql_data   = array();
}
$the_title = $_SESSION['title'];

// -----------------------------------------------------------
function write_config_db($filename, $data)
{
	$ret = array('status'     => 'ok', 'cfg_string' => '');

	$db_host  = $data['db_host'];
	$db_login = $data['db_login'];
	// if @ present in db_login, explode an take user name WITHOUT HOST
	$user_host = explode('@',$db_login);

	if (count($user_host) > 1 )
	{
		$db_login = $user_host[0];
	}

	$db_passwd = $data['db_passwd'];
	$db_name = $data['db_name'];
	$db_type = $data['db_type'];
	$db_table_prefix = $data['db_table_prefix'];

	// write config.inc.php
	$configString = "<?php" . "\n" . "// Automatically Generated by " .$_SESSION['app_name'] ." Installer - " . date(DATE_RFC822) . "\n";
	$configString .= "define('DB_TYPE', '" . $db_type . "');\n";
	$configString .= "define('DB_USER', '" . $db_login . "');\n";
	$configString .= "define('DB_PASS', '" . $db_passwd . "');\n";
	$configString .= "define('DB_HOST', '" . $db_host . "');\n";
	$configString .= "define('DB_NAME', '" . $db_name . "');\n";
	$configString .= "define('DB_TABLE_PREFIX', '" . $db_table_prefix . "');\n";
	$configString .= "?>\n";
	//
	// PHP CLOSING TAG Ommited, following several internet documents indications
	// example:
	// http://ellislab.com/codeigniter/user-guide/general/styleguide.html#php_closing_tag

	if (@!$handle = fopen($filename, 'w'))
	{
		$ret['status'] = 'ko';
	}

	// Write $somecontent to our opened file.
	if (@fwrite($handle, $configString) === FALSE)
	{
		$ret['status'] = 'ko';
	}
	@fclose($handle);

	$ret['cfg_string'] = $configString;

	return($ret);
}

/*
 Function: create_user_for_db

 Check for user existence.

 If doesn't exist
 Creates a user/passwd with the following GRANTS: SELECT, UPDATE, DELETE, INSERT
 for the database
 Else
 do nothing


 20051217 - fm
 refactoring - cosmetics changes

 20050910 - fm
 webserver and dbserver on same machines      => user will be created as user
 webserver and dbserver on DIFFERENT machines => user must be created as user@webserver

 if @ in login ->  get the hostname using splitting, and use it
 during user creation on db.


 */
function create_user_for_db($db_type,$db_name,$db_server, $db_admin_name, $db_admin_pass,
                            $db_usr_name, $db_usr_passwd)
{
	$try_create_user=0;
	echo "<br />Creating connection to $db_type Database Server database $db_type: ";
	
	$msg = '';
	
	try{
		$conn_result = new PDO("$db_type:host=$db_server; dbname=$db_type", $db_admin_name, $db_admin_pass);
		echo "<span class='ok'>OK! </span>";

		$conn_result->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
		$conn_result->beginTransaction();
		
		$sql = "SELECT * FROM user WHERE user='$db_usr_name'";
        echo '<br/>' .$sql;
		$stmts = $conn_result->query($sql);
		
		if ($stmts == FALSE)
		{
		    $msg .= 'query db server user Failed!';
		}
		else
		{
		    echo ': rowCount=' .$stmts->rowCount() .' ';
		    
		    if ($stmts->rowCount() > 0)
		    {
    		    $msg .= "user '$db_usr_name' already exits!";
    		    
    		    while ($row = $stmts->fetch(PDO::FETCH_NUM, PDO::FETCH_ORI_NEXT)) {
                    echo '<br/>';
    		        $matchrecord = "Match record: " .$row[0] . "\t" . $row[1] . "\t" . $row[2] . "\n";
    		        echo $matchrecord;
    		    }
		    }
		    else 
		    {
                $sql ="CREATE USER '$db_usr_name'@'$db_server' IDENTIFIED BY '$db_usr_passwd'";
		        echo '<br/>' .$sql;
		        $conn_result->query($sql);
		        
		        $msg .= 'ok -';
		    }
		    $stmts = null;
		    
		    try
		    {
    		    $sql = "GRANT ALL PRIVILEGES ON $db_name.* TO $db_usr_name";
    		    echo '<br/>' .$sql;
    		    $conn_result->query($sql);

    		    $sql = "FLUSH PRIVILEGES";
    		    echo '<br/>' .$sql;
    		    $conn_result->query($sql);
    		    
    		    $msg .= 'ok -';
		    } catch (PDOException $e){
		        echo '<span class="notok"> Failed! </span>' .$e->getMessage();
		        $msg .= "PDOExcetion: GRANT Error";
		    }
		}

		$conn_result->commit();
		$conn_result = null;
		
	} catch (PDOException $e){
	    
	  echo '<span class="notok"> Failed! </span>';
	  echo '<br>PDOException: ' .$e->getMessage() .'</br>';
	  $msg .= "PDOExcetion";
	}

	echo "<br/>";
	
	return($msg);
}  /* Function ends */


/*
 function: close_html_and_exit()

 args :

 returns:

 */
function close_html_and_exit()
{
	echo "
			</td>
	      </tr>
	    </table>
	</td>
  </tr>" .
  '<tr class="fancyRow2">
		<td class="border-top-bottom smallText">&nbsp;</td>
		<td class="border-top-bottom smallText" align="right">&nbsp;</td>' .
		"</tr>
  </table>
</body>
</html>";
		
	exit;
}  /* Function ends */

?>


<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
  <title><?php echo $the_title; ?></title>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
  <style type="text/css"> 
  	@import url('./css/style.css');
    ul li { margin-top: 7px; }
  </style>
</head> 

<body>
	<table border="0" cellpadding="0" cellspacing="0" class="mainTable">
	  <tr class="fancyRow">
	    <td><span class="headers">&nbsp;<img src="./img/dot.gif" alt="" style="margin-top: 1px;" />&nbsp;<?php echo $tl_and_version?></span></td>
	    <td align="right"><span class="headers"><?php echo $the_title ?> </span></td>
	  </tr>
	  <tr class="fancyRow2">
	    <td colspan="2" class="border-top-bottom smallText" align="right">&nbsp;</td>
	  </tr>
	  <tr align="left" valign="top">
	    <td colspan="2">
	      <table width="100%"  border="0" cellspacing="0" cellpadding="1">
	        <tr align="left" valign="top">
	          <td class="pad" id="content" colspan="2">
	
						<?php 
						echo $_SESSION['app_name'] .' installation will now attempt to setup the database ' .$db_name .'.<br/>'; 
						
//						$update_pwd=0;
						$create_dbase = false;
						$errors = 0;
						$table_prefix ='';
//						$adminname = '';
//						$adminpass = '';
						
						try{
						    
						    // do some database checks
						    // (1) Check whether the DB server is available, Connect to DB Server without choosing an specific database,
						    echo "<br/><b>Creating connection to $db_type Database Server: </b>";
						    
						    // ------------------------------------------------------------------------------------------------
						    $conn_result = new PDO("$db_type:host=$db_server", $db_admin_name, $db_admin_passwd);
							echo "<span class='ok'>OK!</span>";

							$conn_result->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							$conn_result->beginTransaction();
							
							echo '<br/> step1: ';
							$sql = "DROP DATABASE IF EXISTS $db_name";
							echo $sql .'->';
							$conn_result->query($sql);
							echo '<span class="ok">Success! </span>';
							
							echo '<br/> step2: ';
							$sql = "CREATE DATABASE $db_name";
							echo $sql .'->';
							$conn_result->query($sql);
							echo '<span class="ok">Success! </span>';

							echo '<br/> step3: ';
							$sql = "USE $db_type";
							echo $sql .'->';
							$stmts = $conn_result->query($sql);
							echo '<span class="ok">Success! </span>';
							
							echo '<br/> step4: ';
							$sql = "SELECT * FROM user WHERE user='$db_usr_name'";
							echo $sql .'->';
							$stmts = $conn_result->query($sql);
							echo '<span class="ok">Success! </span>';
							
							echo ' rowCount=' .$stmts->rowCount() .' ';
							
							if ($stmts->rowCount() > 0)
							{
							    echo " user $db_usr_name already exits!";
							    
							    while ($row = $stmts->fetch(PDO::FETCH_NUM, PDO::FETCH_ORI_NEXT)) {
							        echo '<br/>';
							        $matchrecord = "------matched record: " .$row[0] . "\t" . $row[1] . "\n";
							        echo $matchrecord;
							    }
							}
							else
							{
							    echo '<br/> step5: ';
    							$sql = "CREATE USER '$db_usr_name'@'$db_server' IDENTIFIED BY '$db_usr_passwd'";
    							echo $sql .'->';
    							$conn_result->query($sql);
    							echo '<span class="ok">Success! </span>';
/*
    							echo '<br/> step5.1: ';
    							$sql = "FLUSH PRIVILEGES";
    							echo $sql .'->';
    							$stmts = $conn_result->query($sql);
    							echo '<span class="ok">Success! </span>';
*/
							}
							
							echo '<br/> step6: ';
							$sql = "GRANT ALL PRIVILEGES ON $db_name.* TO '$db_usr_name'@'$db_server' IDENTIFIED BY '$db_usr_passwd'";
							echo $sql .'->';
							$stmts = $conn_result->query($sql);
							echo '<span class="ok">Success! </span>';

							echo '<br/> step7: ';
							$sql = "FLUSH PRIVILEGES";
							echo $sql .'->';
							$stmts = $conn_result->query($sql);
							echo '<span class="ok">Success! </span>';
							
							$conn_result->commit();
							$conn_result = null;

							echo "<br/><br/><b>Creating connection to dbase $db_name: </b>";
							$conn_result = new PDO("$db_type:host=$db_server; dbname=$db_name", $db_usr_name, $db_usr_passwd);
							echo "<span class='ok'>OK!</span>";
							
							$conn_result->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
							$conn_result->beginTransaction();
							
							$sqlParser = new SqlParser($conn_result,$db_type,$db_table_prefix);
							foreach($a_sql_schema as $sql_schema)
							{
							    foreach ($sql_schema as $sql_file)
							    {
							        echo "<br />Processing:" . $sql_file;
							        $sqlParser->process($sql_file);
							    }
							    echo "<br />";
							}
							
							$conn_result->commit();
							$conn_result = null;
							
							if($sqlParser->install_failed==true)
							{
							    echo "<span class='notok'>Failed!</span></b> - {$inst_type_verbose} failed!";
							    $errors += 1;
							    
							    echo "<p />" .
											    $_SESSION['app_name'] ." setup couldn't install the default site into the selected database. " .
											    "The last error to occur was <i>" . $sqlParser->sql_errors[count($sqlParser->sql_errors)-1]["error"] .
											    '</i> during the execution of SQL statement <span class="mono">' .
											    strip_tags($sqlParser->sql_errors[count($sqlParser->sql_errors)-1]["sql"]). "</span>";
											    
											    close_html_and_exit();
							}
							else
							{
							    echo "<span class='ok'>OK!</span>";
							}
							
							echo "<br><br/><b>Writing configuration file:</b>";
							$data['db_host'] = $db_server;
							$data['db_login'] = $db_usr_name;
							$data['db_passwd'] = $db_usr_passwd;
							$data['db_name'] = $db_name;
							$data['db_type'] = $db_type;
							$data['db_table_prefix'] = $db_table_prefix;
							
							$cfg_file = "../config_db.inc.php";
							$yy = write_config_db($cfg_file,$data);
							// -----------------------------------------------------------------------------
							if(strcasecmp('ko', $yy['status']) == 0)
							{
							    echo "<span class='notok'>Failed!</span></b>";
							    $errors += 1;
							    
							    echo "<p />" .
											    $_SESSION['app_name'] ."couldn't write the config file. Please copy the following into the " .
											    '<span class="mono"> ' . $cfg_file . '</span> file:<br />' .
											    '<textarea style="width:400px; height:160px;">' . $yy['cfg_string'] . "</textarea>";
											    
											    //				  echo "Once that's been done, you can log into TestLink by pointing your browser at your TestLink site.";
											    
											    close_html_and_exit();
							}
							else
							{
							    echo "<span class='ok'>OK!</span>";
							}
							
							// 20080308 - franciscom
							//			important_reminder();
							echo ' <br><br><span class="headers">YOUR ATTENTION PLEASE:</span><br>To have a fully functional installation
        					       You need to configure mail server settings, following this steps:<br>
        					       <ul>
        					       <li>step1, todo something.</li>
        					       <li>step2, todo something.</li>
        					       <li>step3, ......</li>
        			  			   </ul>';
							
							// BUGID 4174 - When testlink is updated do not show login data admin/admin as they might not exist
							$successfull_message = '<br><div><span class="headers">' . "{$inst_type_verbose} was successful!" . '</span><br>' .
											'You can now login into <a href="../index.php"> ' .$_SESSION['app_name'];

							$successfull_message .= " (using login name: admin /password: admin - Please Click Me!)";
							$successfull_message .= '</a></div>';
							
							echo $successfull_message;
						
						} catch (PDOException $e){
						    echo '<span class="notok">Failed! </span>';
						    echo '<br>PDOException: ' .$e->getMessage() .'</br>';
						    close_html_and_exit();
						}
						
						?>
	          </td>
	        </tr>
	      </table>
	    </td>
	  </tr>
	  <tr class="fancyRow2">
	  	<td class="border-top-bottom smallText">&nbsp;</td>
	  	<td class="border-top-bottom smallText" align="right">&nbsp;</td>
	  </tr>
	</table>
</body>
</html>